current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
k
current_g[N_l]
last_g[N_l+1]
last_g[N_l-1]
(DG_r/dx1*last_g[N_l+1] + DG_g/dx2*last_g[N_l-1])/(DG_r/dx1+DG_g/dx2);
(DG_r/dx1*last_g[N_l+1] + DG_g/dx2*last_g[N_l-1])/(DG_r/dx1+DG_g/dx2);
(DG_g * dx1 * current_g[N_l + 1] + DG_r * dx2 * current_g[N_l - 1]) / (DG_r * dx1 + DG_g * dx2)
got_mid <- function(a_1, D1, a_2, D2){
a <- (D2 * dx1 * a_1 + D1 * dx2 * a_2) /  (D2 * dx1 + D1 * dx2);
return(a);
}
ggot_mid(last_g[N_l+1], DG_r, last_g[N_l-1], DG_g)
got_mid(last_g[N_l+1], DG_r, last_g[N_l-1], DG_g)
DG_r <- 2.1*1e-6;
DP_r <- 2.1*1e-6;
DO2_r <- 0.66*1e-5;
DG_g <- 6.3*1e-6;
DP_g <- 6.3*1e-6;
DO2_g <- 2*1e-5;
got_mid(last_g[N_l+1], DG_r, last_g[N_l-1], DG_g)
got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g)
got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] +
dt*(DG_r*(last_g[k-1]-2*last_g[k]+last_g[k+1])/(dx_l[k-1]^2))
- kinetics_partg;
current_p[k] <- last_p[k] +
dt*(DP_r*(last_p[k-1]-2*last_p[k]+last_p[k+1])/(dx_l[k-1]^2))+
+ kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]
- kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]
+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]
+ kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k]
- kinetics_parto2;
current_o2[k] <- last_o2[k] +
dt*(DO2_r*(last_o2[k-1]-2*last_o2[k]+last_o2[k+1])/(dx_l[k-1]^2))
- kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] +
dt*(DG_g*(last_g[k-1]-2*last_g[k]+last_g[k+1])/(dx_l[k-1]^2));
current_p[k] <- last_p[k] +
dt*(DP_g*(last_p[k-1]-2*last_p[k]+last_p[k+1])/(dx_l[k-1]^2));
current_o2[k] <- last_o2[k] +
dt*(DO2_g*(last_o2[k-1]-2*last_o2[k]+last_o2[k+1])/(dx_l[k-1]^2));
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
got_dif <- function(a1, k, D, dt, dx) {
a <- dt * D * (a1[k + 1] - 2 * a1[k] + a1[k - 1]) / (dx^2)
return(a);
}
dx_l[k-1]
dx1
dt*(DG_r*(last_g[k-1]-2*last_g[k]+last_g[k+1])/(dx_l[k-1]^2))
got_dif(last_g, k, DG_r, dt, dx1)
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k]
+ got_dif(last_g, k, DG_r, dt, dx1)
- kinetics_partg;
current_p[k] <- last_p[k]
+ got_dif(last_p, k, DP_r, dt, dx1)
#dt*(DP_r*(last_p[k-1]-2*last_p[k]+last_p[k+1])/(dx_l[k-1]^2))+
+ kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]
- kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]
+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]
+ kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k]
- kinetics_parto2;
current_o2[k] <- last_o2[k]
+ got_dif(last_o2, k, DO2_r, dt, dx1)
#dt*(DO2_r*(last_o2[k-1]-2*last_o2[k]+last_o2[k+1])/(dx_l[k-1]^2))
- kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
N_l
k
k<- 10
dt*VMAX1*last_g[k]/(KM1+last_g[k]);
last_g
got_dif(last_g, k, DG_r, dt, dx1)
last_g[k]
dt*VMAX1*last_g[k]/(KM1+last_g[k]);
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
k
last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_r, dt, dx1) + kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]  - kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]   + kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k] - kinetics_parto2;
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_r, dt, dx1) - kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
k<- 10
current_o2[k]
last_o2[k]
kinetics_parto2
got_dif(last_o2, k, DO2_r, dt, dx1)
kinetics_partg
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
kinetics_partg
kinetics_parto2
last_1ox[k] + dt*2*K1*last_1red[k]
last_2ox[k] - dt*4*K2*last_2ox[k]
last_1red[k] - dt*2*K1*last_1red[k]
last_2red[k] + dt*4*K2*last_2ox[k]
last_2red[k]
last_2ox[k]
K2
dt
dt*4*K2*last_2ox[k]
last_2ox[k] - dt*4*K2*last_2ox[k]
last_2ox[k]
dt*4*K2*last_2ox[k]
- dt*4*K2*last_2ox[k]
last_2ox[k]
last_2ox[k] - dt*4*K2*last_2ox[k]
k2
K2
current_2ox
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_r, dt, dx1) + kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]  - kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]   + kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k] - kinetics_parto2;
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_r, dt, dx1) - kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
current_1ox
current_2ox
current_1red
current_2red
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(time in 0:10){
#pin<- function()
#    {
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_r, dt, dx1) + kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]  - kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]   + kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k] - kinetics_parto2;
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_r, dt, dx1) - kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
# No conditions?
#current_1ox[1] <- current_1ox[2];
#current_1red[1] <- current_1red[2];
#current_2ox[1] <- current_2ox[2];
#current_2red[1] <- current_2red[2];
#current_1ox[N_l] <- current_1ox[N_l-1];
#current_1red[N_l] <- current_1red[N_l-1];
#current_2ox[N_l] <- current_2ox[N_l-1];
#current_2red[N_l] <- current_2red[N_l-1];
# last_g <- current_g;
last_p <- current_p;
last_o2 <- current_o2;
last_1red <- current_1red;
last_1ox <- current_1ox;
last_2red <- current_2red;
last_2ox <- current_2ox;
}
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(time in 0:10){
#pin<- function()
#    {
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_r, dt, dx1) + kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]  - kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]   + kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k] - kinetics_parto2;
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_r, dt, dx1) - kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
# No conditions?
#current_1ox[1] <- current_1ox[2];
#current_1red[1] <- current_1red[2];
#current_2ox[1] <- current_2ox[2];
#current_2red[1] <- current_2red[2];
#current_1ox[N_l] <- current_1ox[N_l-1];
#current_1red[N_l] <- current_1red[N_l-1];
#current_2ox[N_l] <- current_2ox[N_l-1];
#current_2red[N_l] <- current_2red[N_l-1];
last_g <- current_g;
last_p <- current_p;
last_o2 <- current_o2;
last_1red <- current_1red;
last_1ox <- current_1ox;
last_2red <- current_2red;
last_2ox <- current_2ox;
}
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
plot(current_p)
last_g <- rep(0, grid_size); last_g[N_l:grid_size] <- G_0;
last_p <- rep(0, grid_size);
last_o2 <- rep(O2_0, grid_size);
last_1ox <- rep(E1OX_0, grid_size);
last_2ox <- rep(E2OX_0, grid_size);
last_1red <- rep(0, grid_size);
last_2red <- rep(0, grid_size);
current_g <- rep(0, grid_size);
current_p <- rep(0, grid_size);
current_o2 <- rep(0, grid_size);
current_1ox <- rep(0, grid_size);
current_2ox <- rep(0, grid_size);
current_1red <- rep(0, grid_size);
current_2red <- rep(0, grid_size);
for(time in 0:100){
#pin<- function()
#    {
for(k in 2:(N_l-1)){
kinetics_partg <- dt*VMAX1*last_g[k]/(KM1+last_g[k]);
kinetics_parto2 <- dt*VMAX2*last_o2[k]/(KM2+last_o2[k]);
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_r, dt, dx1) - kinetics_partg;
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_r, dt, dx1) + kinetics_partg;
current_1ox[k] <- last_1ox[k] + dt*2*K1*last_1red[k]  - kinetics_partg;
current_1red[k] <- last_1red[k] - dt*2*K1*last_1red[k]+ kinetics_partg;
current_2ox[k] <- last_2ox[k] - dt*4*K2*last_2ox[k]   + kinetics_parto2;
current_2red[k] <- last_2red[k] + dt*4*K2*last_2ox[k] - kinetics_parto2;
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_r, dt, dx1) - kinetics_parto2;
}
for(k in (N_l+1):(grid_size-1)){
current_g[k] <- last_g[k] + got_dif(last_g, k, DG_g, dt, dx2);
current_p[k] <- last_p[k] + got_dif(last_p, k, DP_g, dt, dx2);
current_o2[k] <- last_o2[k] + got_dif(last_o2, k, DO2_g, dt, dx2);
}
current_g[N_l] = got_mid(current_g[N_l+1], DG_r, current_g[N_l-1], DG_g);
current_p[N_l] = got_mid(current_p[N_l+1], DP_r, current_p[N_l-1], DP_g);
current_o2[N_l] = got_mid(current_o2[N_l+1], DO2_r, current_o2[N_l-1], DO2_g);
#current_g[grid_size] <- G_0;
current_g[1] <- current_g[2];
current_p[1] <- current_p[2];
current_o2[1] <- current_o2[2];
current_g[grid_size] <- current_g[grid_size-1];
current_p[grid_size] <- current_p[grid_size-1];
current_o2[grid_size] <- current_o2[grid_size-1];
# Where put this?
current_1red <- 2*K2*current_2ox/K1;
# No conditions?
#current_1ox[1] <- current_1ox[2];
#current_1red[1] <- current_1red[2];
#current_2ox[1] <- current_2ox[2];
#current_2red[1] <- current_2red[2];
#current_1ox[N_l] <- current_1ox[N_l-1];
#current_1red[N_l] <- current_1red[N_l-1];
#current_2ox[N_l] <- current_2ox[N_l-1];
#current_2red[N_l] <- current_2red[N_l-1];
last_g <- current_g;
last_p <- current_p;
last_o2 <- current_o2;
last_1red <- current_1red;
last_1ox <- current_1ox;
last_2red <- current_2red;
last_2ox <- current_2ox;
}
current_g
current_p
current_1ox
current_2ox
current_1red
current_2red
current_o2
output_i <- read.table("~/Documents/de/numerical/testing/cpp/simul/Biosensor-Calculator-Library/output.dat", quote="\"", comment.char="");
plot(output_i$V2, output_i$V1);
dt
output_i <- read.table("~/Documents/de/numerical/testing/cpp/simul/Biosensor-Calculator-Library/output.dat", quote="\"", comment.char="");
plot(output_i$V2, output_i$V1);
output_i <- read.table("~/Documents/de/numerical/testing/cpp/simul/Biosensor-Calculator-Library/output.dat", quote="\"", comment.char="");
plot(output_i$V2, output_i$V1);
output_i <- read.table("~/Documents/de/numerical/testing/cpp/simul/Biosensor-Calculator-Library/output.dat", quote="\"", comment.char="");
plot(output_i$V2, output_i$V1);
output_i <- read.table("~/Documents/de/numerical/testing/cpp/simul/Biosensor-Calculator-Library/output.dat", quote="\"", comment.char="");
plot(output_i$V2, output_i$V1);
